trigger:
  - main

# Change major and/or minor version here.
name: 1.0$(Rev:.r)

stages:

    # BUILD stage
  - stage: Build
    jobs:
      - job: dotnet
        displayName: 'Build API and Function'
        pool:
          vmImage: 'windows-2019'
        variables:
          buildConfiguration: 'Release'
        steps:
          - task: UseDotNet@2
            inputs:
              version: '3.1.x'
              packageType: sdk

          - task: DotNetCoreCLI@2
            displayName: "Build Gateway"
            condition: "and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))"
            inputs:
              command: 'publish'
              publishWebProjects: true
              projects: '**/*Gateway*.csproj'
              arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: true

          - task: DotNetCoreCLI@2
            displayName: "Build Weather Service"
            condition: "and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))"
            inputs:
              command: 'publish'
              publishWebProjects: true
              projects: '**/*Weather*.csproj'
              arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: true

          - task: PublishBuildArtifacts@1
            displayName: "Upload Weather Service Artifacts"
            condition: "and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))"
            inputs:
              pathtoPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'drop'

          - task: PublishBuildArtifacts@1
            displayName: 'Upload scripts'
            condition: "and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))"
            inputs:
              pathtoPublish: deploy
              artifactName: deploy

    # Deploy to developement environment
  - stage: DeployDevelopment
    displayName: 'Development environment'
    condition: "and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))"

    jobs:
      # track deployments on the environment
      - deployment: 'development'
        displayName: 'Deploy to Dev environment'
        pool:
          vmImage: 'vs2017-win2016'
        # creates an environment if it doesn't exist
        environment: 'AppInsights Demo - Development'
        strategy:
          # default deployment strategy
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop

                - download: current
                  artifact: dropfunction

                - download: current
                  artifact: deploy

                - task: AzureCLI@2
                  displayName: 'Provision Azure resources'
                  inputs:
                    azureSubscription: 'azure'
                    scriptType: ps
                    scriptPath: '$(Pipeline.Workspace)/deploy/deploy.ps1'
                    arguments: -environmentType DevTest -environmentName Dev
                    addSpnToEnvironment: true
                    workingDirectory: '$(Pipeline.Workspace)/deploy'

                - task: AzureRmWebAppDeployment@4
                  displayName: 'Deploy Gateway'
                  inputs:
                    appType: apiApp
                    azureSubscription: 'azure'
                    WebAppName: 'jbapidevdemo'
                    enableCustomDeployment: true
                    DeploymentType: 'webDeploy'
                    package: '$(Pipeline.Workspace)/drop/AppInsightsDemo.Gateway.zip'

                - task: AzureRmWebAppDeployment@4
                  displayName: 'Deploy Weather Service'
                  inputs:
                    appType: apiApp
                    azureSubscription: 'azure'
                    WebAppName: 'jbapidevdemoweather'
                    enableCustomDeployment: true
                    DeploymentType: 'webDeploy'
                    package: '$(Pipeline.Workspace)/drop/AppInsightsDemo.Services.Weather.zip'